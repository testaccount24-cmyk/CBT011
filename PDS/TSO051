GETINFO  TITLE 'GET TSO USER STUFF FROM JCT INTO CLIST VARIABLES-V1M4'  00003**6
         PRINT OFF    MACROS BE HERE                                    00004**6
*          DATA SET MODESET    AT LEVEL 002 AS OF 01/15/82              00005**6
         MACRO                                                          00006**6
&LABEL   MODESET &KEY=,&MF=,&RET=R14,&MODE=     CHANGE NAME TO MODESET  00007**6
.*                                                                      00008**6
.* CHANGE MACRO NAME TO FMODESET TO ALLOW USE OF REAL MODESET           00009**6
.*                                                                      00010**6
         LCLC    &PRINT         ******TO ALLOW USE OF MAGIC SVC  KT     00011**6
&PRINT   SETC    'OFF'                                                  00012**6
         AIF     ('&MF(1)' EQ 'E').CODE                                 00013**6
         AIF     ('&KEY' EQ 'ZERO').GOSUP                               00014**6
         AIF     ('&MODE' EQ 'SUP').GOSUP                               00015**6
         AIF     ('&KEY' EQ 'NZERO').GOPROB                             00016**6
         AIF     ('&MODE' EQ 'PROB').GOPROB                             00017**6
 MNOTE 8,'MODESET (NTL) OF &KEY NOT RECOGNIZED'                         00018**6
         MEXIT                                                          00019**6
.GOSUP   ANOP                                                           00020**6
*                                                                       00021**6
&LABEL   ICM   R0,B'1111',=X'ABCFEDAD'  GET CODE                        00022**6
         SR    1,1              INDICATE KEY=0                          00023**6
         SVC   246              DOIT PLEASE                             00024**6
         AIF   ('&MF' NE 'L').FIN1                                 NTL* 00025**6
         BR    &RET             RETURN TO MAINLINE                      00026**6
*                                                                       00027**6
.FIN1    ANOP  ,                                                   NTL* 00028**6
         MEXIT                                                          00029**6
.GOPROB  ANOP                                                           00030**6
*                                                                       00031**6
&LABEL   ICM   R0,B'1111',=X'ABCFEDAD'  GET CODE                        00032**6
         SVC   246                IF YOU PLEASE.....                    00033**6
         AIF   ('&MF' NE 'L').FIN2                                 NTL* 00034**6
         BR    &RET             RETURN TO CALLER                        00035**6
*                                                                       00036**6
.FIN2    ANOP  ,                                                   NTL* 00037**6
         MEXIT                                                          00038**6
.CODE    ANOP                                                           00039**6
         AIF   ('&MF(1)' NE 'E').OOPS                                   00040**6
&LABEL   BAL   &RET,&MF(2)      INVOKE ROUTINE                          00041**6
*                                                                       00042**6
         MEXIT                                                          00043**6
.OOPS    ANOP                                                           00044**6
 MNOTE 12,'NTL MODESET MF NOT=L OR (E,ADDR)   MF=&MF'                   00045**6
         MEND                                                           00046**6
         MACRO                                                          00047**6
         REGEQU                                                         00048**6
R0       EQU   0                                                        00049**6
R1       EQU   1                                                        00050**6
R2       EQU   2                                                        00051**6
R3       EQU   3                                                        00052**6
R4       EQU   4                                                        00053**6
R5       EQU   5                                                        00054**6
R6       EQU   6                                                        00055**6
R7       EQU   7                                                        00056**6
R8       EQU   8                                                        00057**6
R9       EQU   9                                                        00058**6
R10      EQU   10                                                       00059**6
R11      EQU   11                                                       00060**6
R12      EQU   12                                                       00061**6
R13      EQU   13                                                       00062**6
R14      EQU   14                                                       00063**6
R15      EQU   15                                                       00064**6
         MEND                                                           00065**6
         MACRO                                                          00066**6
&LAB     LEAVER &WR=R13,&WL=WORKLEN                                     00067**6
&LAB     LR    R1,&WR             WORKAREA ADDR FOR FREEMAIN            00068**6
         LA    R0,&WL             WORKAREA LEN   "    "                 00069**6
         L     R13,4(R13)         GET CALLERS SAVEAREA ADDR             00070**6
         LR    R11,R15            SAVE RETURN CODE                      00071**6
         FREEMAIN R,LV=(0),A=(1)                                        00072**6
         LR    R15,R11            RESTORE RETURN CODE                   00073**6
         RETURN (14,12),RC=(15)                                         00074**6
         MEND                                                           00075**6
         MACRO                                                          00076**6
&LAB     LEAVENR                                                        00077**6
&LAB     L     R13,4(R13)         GET CALLERS SAVEAREA ADDR             00078**6
         RETURN (14,12),RC=(15)                                         00079**6
         MEND                                                           00080**6
         MACRO                                                          00081**6
&LAB     KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA        00082**6
*                  DEFAULT OPERANDS :                                   00083**6
*        KKPARSE &CPPL=R11,&ANS=ANS,&ECB=ECB,&PCL=PCL,&PPLA=PPLA        00084**6
*                            CPPL IS THE REGISTER CONTAINING THE        00085**6
*                                 POINTER TO THE COMMAND PROCESSOR      00086**6
*                                 PARAMETER LIST.                       00087**6
*                            ANS  IS A FULLWORD WHERE PARSE RETURNS     00088**6
*                                 THE POINTER TO HIS ANSWER (IKJPARMD). 00089**6
*                            ECB  IS A FULLWORD.                        00090**6
*                            PCL  IS THE NAME OF THE PARSE CONTROL      00091**6
*                                 LIST CSECT (IKJPARM).                 00092**6
*                            PPLA IS A 7 FULLWORD AREA USED FOR         00093**6
*                                 THE PARSE PARAMETER LIST.             00094**6
*                                                                       00095**6
*        KKPARSE             USES REGS R14,R15,R1,&CPPL REG             00096**6
*                                                                       00097**6
         USING CPPL,&CPPL         POINTS TO CPPL (PARM LIST)            00098**6
*                                                                       00099**6
&LAB     LA    R1,&PPLA           R1->PPL AREA                          00100**6
         USING PPL,R1             TELL ASSEMBLER POINTS TO PPL AREA     00101**6
*                                                                       00102**6
*                         CONSTRUCT PARSE PARAMETER LIST                00103**6
*                                           FOR IKJPARS :               00104**6
*                                                                       00105**6
         MVC   PPLUPT,CPPLUPT     UPT                                   00106**6
         MVC   PPLECT,CPPLECT     ECT                                   00107**6
         LA    R15,&ECB           ECB                                   00108**6
         ST    R15,PPLECB                                               00109**6
         L     R15,=V(&PCL.)      PCL                                   00110**6
         ST    R15,PPLPCL                                               00111**6
         LA    R15,&ANS           ANS                                   00112**6
         ST    R15,PPLANS                                               00113**6
         MVC   PPLCBUF,CPPLCBUF   CBUF                                  00114**6
         XC    PPLUWA,PPLUWA                                            00115**6
*                                                                       00116**6
         DROP  R1                                                       00117**6
         EJECT                                                          00118**6
*        CALLTSSR EP=IKJPARS      CALL PARSE:                           00119**6
         CALLTSSR EP=IKJPARS      CALL PARSE:                           00120**6
         EJECT                                                          00121**6
*                                                                       00122**6
*                        DSECTS NEEDED BY PARSE:                        00123**6
*                                                                       00124**6
*CPPL    IKJCPPL                                                        00125**6
CPPL     IKJCPPL                                                        00126**6
*PPL     IKJPPL                                                         00127**6
PPL      IKJPPL                                                         00128**6
*                                                                       00129**6
CVTMAP   DSECT                                                          00130**6
         ORG   CVTMAP+524                                               00131**6
CVTPARS  DS    F                                                        00132**6
CVTPTR   EQU   16                                                       00133**6
*                                                                       00134**6
*                                                                       00135**6
&SYSECT  CSECT                                                          00136**6
         MEND                                                           00137**6
         MACRO                                                          00138**6
&LAB1    ENTERR &SA=SAVEAREA,&WA=WORKAREA,&WL=WORKLEN                   00139**6
&LAB1    START                                                          00140**6
         SAVE  (14,12),,*         HO-HUM                                00141**6
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING         00142**6
         USING &LAB1,R12                                                00143**6
         LR    R10,R1             SAVE PARM PTR R10->PARM PTR           00144**6
         LA    R0,&WL             R0=GET LENGTH                         00145**6
         GETMAIN R,LV=(0)         R1->WORKAREA                          00146**6
         LR    R11,R13            R11->CALLERS SAVEAREA                 00147**6
         LR    R13,R1             R13->WORKAREA                         00148**6
         USING &WA.,R13                                                 00149**6
         ST    R11,&SA.+4         SAVE HIS SAVEAREA PTR                 00150**6
         LA    R13,&SA            R13->SAVEAREA (MINE)                  00151**6
         ST    R13,8(,R11)        MINE IN HIS                           00152**6
         LR    R11,R1             R11->WORKAREA IN CASE NOT SAME AS R13 00153**6
*                       WORKAREA ADDR IS STILL R13 FOR                  00154**6
*                       THE ASSEMBLER - IF DIFFERENT FROM R13           00155**6
*                       THEN USE: DROP R13 AND USING &WA.,R11           00156**6
         LR    R1,R10             RESTORE PARM PTR PTR                  00157**6
         REGEQU                                                         00158**6
         MEND                                                           00159**6
         MACRO                                                          00160**6
&LAB1    ENTERNR &SA=SAVEAREA                                           00161**6
&LAB1    START                                                          00162**6
         SAVE  (14,12),,*         HO-HUM                                00163**6
         LR    R12,R15            HOPE HE KNOWS WHAT HE'S DOING         00164**6
         USING &LAB1,R12                                                00165**6
         ST    R13,&SA.+4         SAVE HIS SAVEAREA PTR                 00166**6
         LR    R11,R13            SAVE THE SAVE POINTER                 00167**6
         LA    R13,&SA            R13->SAVEAREA (MINE)                  00168**6
         ST    R13,8(,R11)        MINE IN HIS                           00169**6
         B     ENTEX                                                    00170**6
&SA      DS    18F                                                      00171**6
         REGEQU                                                         00172**6
ENTEX    DS    0H                                                       00173**6
         MEND                                                           00174**6
         MACRO                                                          00175**6
&LAB1    COMMENT &A,&B,&C,&D,&E,&F,&G,&H,&I,&J,&K                       00176**6
         MEND                                                           00177**6
         MACRO  ,                                                       00178**6
&LABEL   STUFFIT &FIELD,&KEYWD,&PDE                                     00179**6
         GBLB  &TSOER3         TSOE R3 VERSION INSTALLED          NTLR3
         LCLC   &S                                                      00180**6
&S       SETC   '&SYSNDX'                                               00181**6
         SPACE  1                                                       00182**6
         AIF   (T'&KEYWD EQ 'O').NOCHK                                  00183**6
&LABEL   TM    &KEYWD+1,X'FF'  WAS FIELD REQUESTED?               NTL1  00184**6
         BZ    SKPA&S          NO..SPLIT                                00185**6
         AGO   .FINCHK                                                  00186**6
.NOCHK   ANOP  ,                                                        00187**6
&LABEL   L     R7,&PDE         (R7)= ADDR OF PARSE DESCRIPTOR ENTRY     00188**6
         AGO   .SKP1                                                    00189**6
.FINCHK  ANOP  ,                                                        00190**6
         L     R7,&PDE         (R7)= ADDR OF PARSE DESCRIPTOR ENTRY     00191**6
.SKP1    ANOP  ,                                                        00192**6
         LH    R6,&PDE+4       (R6)= LENGTH OF ELEMENT                  00193**6
         AIF   (&TSOER3).SKP4                                     NTLR3
         BAL   R14,LOCVAR      GO FIND THE CLIST VARIABLE               00194**6
         LTR   R1,R1           ANY LUCK?                                00195**6
         BZ    SKPA&S          NO.. SPLIT                               00196**6
         SPACE 1                                                        00197**6
.SKP4    ANOP  ,                                                  NTLR3
         LA    R15,&FIELD      GET ADDR OF FIELD TO STUFF               00198**6
         LH    R0,=AL2(L'&FIELD)   GET LENGTH OF FIELD TO STUFF   INTEL 00199**6
         AIF   (&TSOER3).SKP3                                     NTLR3
         BAL   R14,SETVAR      GO STUFF IT AWAY INTO CLIST VAR          00200**6
         AGO   .SKP2                                              NTLR3
.SKP3    ANOP  ,                                                  NTLR3
         BAL   R14,GET441        GO STUFF IT AWAY INTO CLIST VAR  NTLR3
.SKP2    ANOP  ,                                                  NTLR3
SKPA&S   DS    0H                                                       00201**6
         SPACE 1                                                        00202**6
         MEND  ,                                                        00203**6
         MACRO ,                                                    NTL 00204**6
&LABEL   STUFFITN &NUMB,&KEYWD,&PDE                                 NTL 00205**6
         SPACE 1                                                    NTL 00206**6
         LCLA  &L                                                   NTL 00207**6
&L       SETA  L'&NUMB         GET LENGTH OF NUMBER                 NTL 00208**6
         SR    R1,R1           CLEAR NUMBER REGISTER                NTL 00209**6
         AIF   (&L NE 1).NOT1                                       NTL 00210**6
&LABEL   IC    R1,&NUMB        GET NUMBER (1 BYTE)                  NTL 00211**6
         AGO   .DOIT                                                NTL 00212**6
.NOT1    ANOP  ,                                                    NTL 00213**6
         AIF   (&L NE 2).NOT2                                       NTL 00214**6
&LABEL   LH    R1,&NUMB        GET NUMBER (HALFWORD)                NTL 00215**6
         AGO   .DOIT                                                NTL 00216**6
.NOT2    ANOP  ,                                                    NTL 00217**6
         AIF   (&L NE 4).NOT4                                       NTL 00218**6
&LABEL   L     R1,&NUMB        GET NUMBER (FULLWORD)                NTL 00219**6
         AGO   .DOIT                                                NTL 00220**6
.NOT4    ANOP  ,                                                    NTL 00221**6
 MNOTE 8,'STUFFITN - LENGTH OF &NUMB IS &L - MUST BE 1,2 OR 4'      NTL 00222**6
         MEXIT ,                                                    NTL 00223**6
.DOIT    ANOP  ,                                                    NTL 00224**6
         BAL   R14,FITINUM                                          NTL 00225**6
 MNOTE '        STUFFIT NUMBER,&KEYWD,&PDE   INVOKE STUFFIT'        NTL 00226**6
         STUFFIT NUMBER,&KEYWD,&PDE                                 NTL 00227**6
         MEND  ,                                                    NTL 00228**6
         PRINT ON   END OF INSTREAM MACROS                              00229**6
*                                                                       00230**6
* TSO COMMAND   G E T I N F O                                           00231**6
*                                                                       00232**6
*     PURPOSE: STUFF JUNK FROM THE OS JCT/ACF2 JCT INTO CLIST           00233**6
*              VARIABLES OF YOUR CHOICE.                                00234**6
*                                                                       00235**6
*   SYNTAX - (ALL OPERANDS ARE OPTIONAL)                                00236**6
*                                 LENGTH  DESCRIPTION                   00237**6
*      GETINFO  PGMRNAME(VAR1) /*  20     PROGRAMMER NAME            */ 00238**6
*               BIN(VAR2)      /*   4     BIN NUMBER (SECOND ACNT FLD*/ 00239**6
*               PHONE(VAR3)    /*  12     USER PHONE NUMBER- ACF2    */ 00240**6
*               DEST(VAR4)     /*   8     DEFAULT SYSOUT DEST        */ 00241**6
*               JOBCLASS(VAR5) /*   1     ACF2 DFT-SUBC              */ 00242**6
*               MSGCLASS(VAR6) /*   1     ACF2 DFT-SUBM              */ 00243**6
*               SYSOUT(VAR7)   /*   1     ACF2 DFT-SOUT              */ 00244**6
*               PROJECT(VAR8)  /*   4     FIRST 4 CHARS OF ACNT FIELD*/ 00245**6
*               SRNUM(VAR9)    /*   4     LAST  4 CHARS OF ACNT FIELD*/ 00246**6
*               JOBNUM(VAR10)  /*   8     JES2 JOB NUMBER            */ 00247**6
*               LINE(VAR11)    /*   8     LOGON TERMAINAL NAME       */ 00248**6
*               DAY(VAR12)     /*   9     DAY OF THE WEEK FOR TODAY  */ 00249**6
*               JDATE(VAR13)   /*   6     JULIAN DATE IN YY.DDD FORM */ 00250**6
*               DATE(VAR14)    /*  13     DATE IN 'MON. DD, 19YY'    */ 00251**6
*               ROWS(VAR15)    /*   8     CUR # LINES/SCREEN         */ 00252**6
*               COLS(VAR16)    /*   8     CUR # CHARS/LINE           */ 00253**6
*               PROWS(VAR17)   /*   8     PRIMARY # LINES/SCREEN     */ 00254**6
*               PCOLS(VAR18)   /*   8     PRIMARY # CHARS/LINE       */ 00255**6
*               AROWS(VAR19)   /*   8     ALTERNATE # LINES/SCREEN   */ 00256**6
*               ACOLS(VAR20)   /*   8     ALTERNATE # CHARS/LINE     */ 00257**6
*               ATTR(VAR21)    /*   4    ='YES'-PROGRAM SYMB OK ELSE */ 00258**6
*                              /*        ='NO' -NO PROGRAM SYMB FEAT.*/ 00259**6
*               ENVIRON(VAR22) /*   8    ='BATCH', 'TSO' OR 'TONE4'  */ 00260**6
*               NOCOMPR        /*  KEYWORD- NO TRIM OF TRAILING BLNKS*/ 00261**6
*                                                                       00262**6
         GBLB  &TONE4          TONE4 MVS DEPENDENT CODE             NTL 00263**6
         GBLB  &SP3            SP1.3 VERSION OF JES2              INTEL 00266**6
         GBLB  &ACF314         ACF2 3.1.4 VERSION INSTALLED       INTEL 00263**6
         GBLB  &TSOER3         TSOE R3 VERSION INSTALLED          NTLR3
&TONE4   SETB  0               1=YES, 0=NO                          NTL 00264**6
&SP3     SETB  0               1=YES, 0=NO                        INTEL 00267**6
&ACF314  SETB  1               1=YES, 0=NO                        INTEL 00264**6
&TSOER3  SETB  1               1=YES, 0=NO                        NTLR3
*                                                                       00262**6
         AIF   (&ACF314).$SK1001                                  INTEL
         GBLC  &ACF2JCT    ACF 3.1.3                              INTEL 00268**6
.$SK1001 ANOP  ,                                                  INTEL 00360**6
          EJECT  ,                                                  NTL 00269**6
*                                                                       00262**6
*                                                                       00262**6
*   VAR1-VAR22 ARE CLIST VARIABLE NAMES (WITHOUT THE & IN FRONT)    NTL 00270**6
*   ALL VARIABLES MUST HAVE BEEN INITIALIZED BY A 'SET' STATMENT BEFORE 00271**6
*   GET INFO IS INVOKED.                                                00272**6
*                                                                       00273**6
*   EXAMPLE:   RETURN PROGRAMMER NAME AND PHONE NUMBER:                 00274**6
*                                                                       00275**6
*        SET &PHON = &STR(            )                                 00276**6
*        SET &PRGN = &STR(                    )                         00277**6
*        GETINFO PGMR(PRGN) PHONE(PHON)                                 00278**6
*                                                                       00279**6
*                                                                       00280**6
* RETURN-CODES : GETINFO RETURNS CODES IN CLIST VAR &LASTCC AS FOLLOWS; 00281**6
*                                                                       00282**6
*                       0 - NORMAL COMPLETION                           00283**6
*              X'20' = 32 - VARIABLE TRUNCATED - TOO SHORT FOR FIELD    00284**6
*              X'40' = 64 - VARIABLE NOT FOUND                          00285**6
*              X'80' =128 - NOT RUNNING UNDER CONTROL OF CLIST          00286**6
*                     256 - PARSE ERROR                                 00287**6
*              NOTE: VALUES ARE ADDITIVE:                               00288**6
*                 A RETURN CODE OF 96 =X'60' INDICATES AT LEAST ONE     00289**6
*                 VARIABLE WAS TRUNCATED, AND ANOTHER WAS NOT FOUND.    00290**6
*                                                                       00291**6
*  HISTORY:                                                             00292**6
*  V1.0    K TRUE     25 JUN 81  - INTEL CORP.                          00293**6
*      BASED ON 'KOMM' FROM KERMIT KISER OF WASHINTON STATE DP          00294**6
*            SERVICE CENTER (WDPSC).  STOLEN FROM COMM WERE MACROS      00295**6
*            AND MANIPULATION OF CLIST VARIABLES ROUTINES.              00296**6
*                                                                   NTL 00297**6
*  V1.1   K  TRUE     12 APR 82  - INTEL CORP                       NTL 00298**6
*      ADDED KEYWORDS:                                              NTL 00299**6
*            ROWS,COLS,PROWS,PCOLS,AROWS,ACOLS,ATTR,ENVIRON         NTL 00300**6
*      ADDED TONE4 SUPPORT VIA &TONE4 GBLB VARIABLE.. CODE FOR      NTL 00301**6
*            EXTRACTION OF TONE4 LINE IS BY BILL WILLIAMS (FROM     NTL 00302**6
*            TSO043(WHODIS) COMMAND)                                NTL 00303**6
*      INCLUDED MODESET LOCAL MACRO AS INSTREAM SO MAGIC SVC COULD  NTL 00304**6
*            BE USED, OR REAL MODESET (AS YOU WISH)                 NTL 00305**6
*  V1.2  K  TRUE     13 MAR 83   - INTEL CORP                       NTL 00306**6
*      ADDED &SP3 FLAG FOR SP1.3 JES2...NEW ACF2 CONTROL BLOCKS..   NTL 00307**6
*  V1.3  B WILLIAMS  08 OCT 84   - INTEL CORP                     INTEL 00306**6
*      ADDED &ACF314 FLAG FOR ACF2  3.1.5 SUPPORT                 INTEL 00307**6
*  V1.4  B WILLIAMS  30 OCT 85   - INTEL CORP                     INTEL 00306**6
*      WITH &ACF314 FLAG SUPPORT JES2 1.3.4 INSTALL               NTL14 00307**6
*  V1.5  B WILLIAMS  11 DEC 85   - INTEL CORP                     NTL15
*      MODIFY LOCVAR ROUTINE TO SUPPORT TSOE EXTENSION TABLE.     NTL15
*  V1.6  B WILLIAMS  27 FEB 86   - INTEL CORP                     NTL16
*      ADD SPLEVEL SET=1 FOR 370 MACRO EXPANSION (STAX)           NTL16
*  V3    B WILLIAMS  01 MAR 87   - INTEL CORP                     NTLR3
*      ADD TSOE R3 EXTENSION TABLE SUPPORT                        NTLR3
*                                                                   NTL 00308**6
* ORIGINAL SOURCE WAS:                                              NTL 00309**6
*          DATA SET CBT934     AT LEVEL 001 AS OF 02/25/79              00310**6
*    FROM THE CBT MODS TAPE.                                        NTL 00311**6
*                                                                   NTL 00312**6
*                                                                   NTL 00313**6
         EJECT                                                          00314**6
*.....................................................................* 00315**6
*        STANDARD COMMAND PROCESSOR LINKAGE                           * 00316**6
*.....................................................................* 00317**6
         SPACE                                                          00318**6
GETINFO  ENTERR                   R13 -> WORKAREA                       00319**6
GETINFO  AMODE   24           NTL31
GETINFO  RMODE   24           NTL31
         SPLEVEL SET=1        NTL31                               NTL16
*                                 R12 -> GETINFO ADDRESSABILITY         00320**6
         XC    RETCODE,RETCODE                                          00321**6
         EJECT                                                          00322**6
*.....................................................................* 00323**6
*        PARSE THE INPUT BUFFER                                       * 00324**6
*.....................................................................* 00325**6
         SPACE                                                          00326**6
         LR    R11,R1             SAVE THE PARM POINTER                 00327**6
*                                 R11 -> CPPL                           00328**6
DOPARSE  KKPARSE                                                        00329**6
*                                                                       00330**6
*                                                                       00331**6
         DROP  R11                                                      00332**6
ANALR    LTR   R15,R15            RC = 0? PARSE WENT OK?                00333**6
         BNZ   PARSERR            NO. -> GO TO PARSE ERR                00334**6
         L     R10,ANS            R10 -> IKJPARMD                       00335**6
         USING IKJPARMD,R10                                             00336**6
         EJECT                                                          00337**6
         AIF   (&ACF314).$SKIP02                                  NTL14
*.....................................................................* 00338**6
*        FIND JCT                                                     * 00339**6
*.....................................................................* 00340**6
         SPACE 1                                                        00341**6
JCT      EQU   R11           NEEDED BY $JCT MACRO FOR                   00342**6
         AIF   (&SP3).$SKIP01                                     NTL14
BUFDSECT EQU   *                 MAPPING OF THE                         00344**6
BUFSTART EQU   *+X'58'                GLORIOUS J C T                    00345**6
         AGO   .$SKP01E                                           INTEL 00346**6
.$SKIP01 ANOP  ,                SP 1.3 JES2                       INTEL 00347**6
         #ACFJES2    ,          ESTABLISH OFFSETS TO USE          INTEL 00348**6
.$SKP01E ANOP  ,                                                  INTEL 00349**6
         SPACE 1                                                        00350**6
FINDJCT  $FINDCB ASCB=R2,JCT=R11   FIND THE JCT AND ASCB ADDRESS        00351**6
         EJECT ,                                                  INTEL 00352**6
         ST    R2,ADDRASCB         SAVE FOR POSSIBLE LATER USE          00353**6
         USING JCTSTART,JCT        ESTABLIST ADDRESSABILITY TO JCT      00354**6
         SPACE 1                                                  INTEL 00355**6
         AIF   (NOT &SP3).$SKIP02                                 NTL14
         ICM   R9,15,&ACF2JCT      TEST, GET ACF2 AREA OFFSET     INTEL 00357**6
         LA    R9,0(JCT,R9)        CALCULATE ADDRESS              INTEL 00358**6
         USING #ACFJCTX,R9         ADDRESSING                     INTEL 00359**6
.$SKIP02 ANOP  ,                                                  NTL14
         AIF   (NOT &ACF314).$SK1003                              NTL14
         $FINDCB ASCB=R2                                          NTL15
         ST    R2,ADDRASCB                                        NTL15
         EJECT ,                                                  NTL15
         USING ACCVT,R3                ADDRESS ACF CVT            INTEL
         ACFGACVT R3,NONE=GETOUT      GET CB ADDRESSABILITY       INTEL
         USING ACUCB,R4               ADDRESS ACF UCB             INTEL
         ACFGUCB R4,NONE=GETOUT,INLINE=YES,SYS=AOS2 GET ACUCB ADDRESS
         LR    R11,R15                                            NTL14
         USING ACFASVT,R11                                        NTL14
         USING LIDREC,R9               ADDRESS ACF LID            INTEL
         ICM   R9,15,ACULRECP          GET ACF2 USER LID ADDRESS  INTEL
         BZ    GETOUT                  PUNT IF NONE               INTEL
         DROP  R3                     DROP ADDRESSABILITY         INTEL
         DROP  R4                     DROP ADDRESSABILITY         INTEL
         AGO   .$SK2002                                           NTL14
.$SK1003 ANOP  ,                                                  INTEL 00360**6
         CLC   JCTID,=CL4'JCT'     IS THIS THE REAL JCT?            NTL 00361**6
         BE    BEGIN               YES.....GO FOR IT                NTL 00362**6
         OI    RETCODE+2,X'02'     SET RC=512                       NTL 00363**6
         B     GETOUT              AND SPLIT                        NTL 00364**6
         EJECT                                                          00365**6
.$SK2002 ANOP  ,                                                  NTL14
*.....................................................................* 00366**6
*        PROCESS THE PARMS                                            * 00367**6
*.....................................................................* 00368**6
         SPACE                                                          00369**6
BEGIN    STUFFIT  LIDNAME,PGMRNAME,PGMRDD                               00370**6
         AIF   (NOT &ACF314).$SK2003                              NTL14
         STUFFIT  NTLROOMN,BINNUMB,BINDD                          NTL14
         AGO   .$SK2004                                           NTL14
.$SK2003 ANOP  ,                                                  NTL14
         STUFFIT  JCTROOMN,BINNUMB,BINDD                                00371**6
.$SK2004 ANOP  ,                                                  NTL14
         STUFFIT  LIDPHONE,PHONE,PHONDD                                 00372**6
         EJECT   ,                                                      00373**6
         STUFFIT  LIDTDRMT,DEST,DESTDD                                  00374**6
         STUFFIT  LIDTSUBC,JOBCLASS,JOBCDD                              00375**6
         STUFFIT  LIDTSUBM,MSGCLASS,MSGCDD                              00376**6
         EJECT   ,                                                      00377**6
         STUFFIT  LIDTSOUT,SYSOUT,SYSODD                                00378**6
         STUFFIT  NTLPROJ,PROJECT,PROJDD                                00379**6
         STUFFIT  NTLSRNUM,SRNUM,SRNUDD                                 00380**6
         EJECT   ,                                                      00381**6
         AIF   (NOT &ACF314).$SK2005                              NTL14
         STUFFIT  ASVJID,JOBNUMB,JOBNDD                           NTL14
         AGO   .$SK2006                                           NTL14
.$SK2005 ANOP  ,                                                  NTL14
         STUFFIT  JCTJOBID,JOBNUMB,JOBNDD                               00382**6
.$SK2006 ANOP  ,                                                  NTL14
         BAL      R14,GETLINE#                                          00383**6
         STUFFIT  LINEAREA,LINE,LINEDD                                  00384**6
         STUFFIT  VLOGMODE,LOGMODE,LMODDD                           NTL 00385**6
         EJECT   ,                                                      00386**6
         STUFFITN TTYPE,TERMTYPE,TTYPDD                             NTL 00387**6
NOLINE   DS       0H                                                    00388**6
         TM       DAY+1,X'FF'      WAS DAY OF WEEK REQUESTED            00389**6
         BZ       NODAY                                                 00390**6
         BAL      R14,DATERTN                                           00391**6
         STUFFIT  LEFTDAY,,DAYXDD                                       00392**6
NODAY    DS       0H                                                    00393**6
         EJECT                                                          00394**6
         TM       JDATEV+1,X'FF'   WAS JULIAN DATE REQUESTED?           00395**6
         BZ       NOJDATE                                               00396**6
         BAL      R14,DATERTN                                           00397**6
         STUFFIT  JDATE,,JDATDD                                         00398**6
NOJDATE  DS       0H                                                    00399**6
         SPACE                                                          00400**6
         TM       GDATEV+1,X'FF'  WAS GREGORIAL DATE REQUESTED?         00401**6
         BZ       NOGDATE                                               00402**6
         BAL      R14,DATERTN                                           00403**6
         STUFFIT  CDATE,,DATEDD                                         00404**6
NOGDATE  DS       0H                                                    00405**6
*                                                                       00406**6
         EJECT                                                          00407**6
*.....................................................................* 00408**6
*        TERMINAL CHARACTERISTICS                                     * 00409**6
*.....................................................................* 00410**6
         SPACE                                                          00411**6
         MVC      WHERAMI,=CL8'TSO'   INDICATE UNDER TSO            NTL 00412**6
         L        R1,ADDRASCB         GET ASCB ADDRESS WE SAVED OFF NTL 00413**6
         CLI      ASCBTSB-ASCB(R1),X'C0' IS THIS TONE4 LAND?        NTL 00414**6
         BNE      NOTTONE4                                          NTL 00415**6
         MVC      WHERAMI,=CL8'TONE4' THIS IS TONE                  NTL 00416**6
         B        STUFFAMI                                          NTL 00417**6
NOTTONE4 CLC      ASCBTSB-ASCB(,R1),=XL4'00' NO POINTER?            NTL 00418**6
         BNE      STUFFAMI            SOME POINTER..MUST BE TSO     NTL 00419**6
         MVC      WHERAMI,=CL8'BATCH' MUST BE BATCH....             NTL 00420**6
STUFFAMI STUFFIT  WHERAMI,ENVIRON,ENVDD  PUT ENVIRONMENT AWAY       NTL 00421**6
         XC       PRMSZE(CLRITL),PRMSZE                             NTL 00422**6
         GTSIZE   ,  GET CURRENT ROWS/COLS FOR TERMINAL             NTL 00423**6
         STC      R0,CURROWS     SAVE CURRENT # LINES PER SCREEN    NTL 00424**6
         STC      R1,CURCOLS     SAVE # CHARS/LINE                  NTL 00425**6
         LA       R15,PRMSZE                                        NTL 00426**6
         ST       R15,GTTERM                                        NTL 00427**6
         LA       R15,ALTSZE                                        NTL 00428**6
         ST       R15,GTTERM+4                                      NTL 00429**6
         LA       R15,ATTRIB                                        NTL 00430**6
         ST       R15,GTTERM+8                                      NTL 00431**6
         MVI      GTTERM+8,X'80'                                    NTL 00432**6
         GTTERM   MF=(E,GTTERM)                                     NTL 00433**6
         STC      R15,GTTERMRC   SAVE OFF RETURN CODE               NTL 00434**6
         EJECT    ,                                                 NTL 00435**6
         STUFFITN CURROWS,ROWS,ROWSDD                               NTL 00436**6
         STUFFITN CURCOLS,COLS,COLSDD                               NTL 00437**6
         EJECT    ,                                                 NTL 00438**6
*        OC       GTTERMRC,GTTERMRC   GTTERM WORK OK?               NTL 00439**6
*        BNZ      GETOUT              NO...CANCEL                   NTL 00440**6
         STUFFITN PRMROWS,PROWS,PROWSDD                             NTL 00441**6
         STUFFITN PRMCOLS,PCOLS,PCOLSDD                             NTL 00442**6
         EJECT    ,                                                 NTL 00443**6
         STUFFITN ALTROWS,AROWS,AROWSDD                             NTL 00444**6
         STUFFITN ALTCOLS,ACOLS,ACOLSDD                             NTL 00445**6
         EJECT    ,                                                 NTL 00446**6
         MVC      ATTRYORN,=CL4'NO'                                 NTL 00447**6
         OC       ATTRIB+3(1),ATTRIB+3 CHECK OUT EXTENDED SYMBOLS   NTL 00448**6
         BZ       STUFFATT                                          NTL 00449**6
         MVC      ATTRYORN,=CL4'YES'  SET UP EXTENDED ATTRIBUTES    NTL 00450**6
STUFFATT STUFFIT  ATTRYORN,ATTR,ATTRDD                              NTL 00451**6
         SPACE   2                                                      00452**6
*.....................................................................* 00453**6
*        EXIT                                                         * 00454**6
*.....................................................................* 00455**6
         SPACE                                                          00456**6
GETOUT   L     R15,RETCODE                                              00457**6
         LEAVER                   EXIT REENTRANT ROUTINE                00458**6
         SPACE 2                                                        00459**6
*                                                                       00460**6
*       GETINFO SUBROUTINES HERE                                        00461**6
*                                                                       00462**6
PARSERR  EQU   *                                                        00463**6
         OI    RETCODE+2,X'01'    RC=256                                00464**6
         B     GETOUT                                                   00465**6
*                                                                       00466**6
         EJECT                                                          00467**6
*.....................................................................* 00468**6
*  SUBROUTINE LOCVAR:                                                 * 00469**6
*  PURPOSE: LOCATE ADDRESS OF VARABLE IN CLIST TO POKE STUFF INTO.    * 00470**6
*                                                                     * 00471**6
*  ENTER WITH :                                                       * 00472**6
*                                                                     * 00473**6
*       (R7) = ADDR PARSE VARIABLE ENTRY (LABEL ON IKJIDENT FOR       * 00474**6
*              SUBFIELD TO BE EXAMINED).                              * 00475**6
*       (R6) = LENGTH OF VARIABLE TO EXAMINE                          * 00476**6
*                                                                     * 00477**6
*       BAL R14,LOCVAR                                                * 00478**6
*                                                                     * 00479**6
* ON RETURN:  (R1) = 0   NOT FOUND                                    * 00480**6
*             (R1) ¬=0   (R1) = ADDR OF CLIST VARIABLE ELEMENT        * 00481**6
*                                                                     * 00482**6
*   REGISTERS USED:  R3,R4,R5,R6,R7,R8 (RESTORED)                     * 00483**6
*                    R1                (NOT RESTORED)                 * 00484**6
*.....................................................................* 00485**6
         SPACE                                                          00486**6
LOCVAR   STM   R3,R8,SAVEREGS                                           00487**6
         L     R5,ECTADDR         R5->ECT                               00488**6
         L     R5,4(,R5)          R5->IOSRL                             00489**6
         L     R4,0(,R5)          R4->TOP OF STACK                      00490**6
CKCLIST  TM    0(R4),X'08'        CLIST ELEMENT?                        00491**6
         BO    GOTCL              YES->WE HAVE A CLIST                  00492**6
         S     R4,=F'4'           R4=R4-4 (NEXT ELEMENT DOWN ON STACK)  00493**6
         C     R4,4(,R5)          R4<BOTTOM OF STACK PTR?               00494**6
         BNL   CKCLIST            NO ->STILL IN STACK; GO CHECK IT      00495**6
         OI    RETCODE+3,X'80'    YES->SET RC=128                       00496**6
         LA    R1,0               NO POINTER FOR THE WICKED             00497**6
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS                     00498**6
         BR    R14                EXIT LOCVAR WITH ERROR                00499**6
         SPACE 1                                                        00500**6
GOTCL    DS    0H                 R7->VARIABLE NAME                     00501**6
*                                 R6=VAR LENGTH FOR LENGTH COMPARE      00502**6
         L     R5,0(,R4)          R5->LSD                               00503**6
         L     R5,12(,R5)         R5->EXECDATA                          00504**6
         L     R5,0(,R5)          R5->SNTAB                             00505**6
         L     R4,8(,R5)          R4==USED TABLE LENGTH                 00506**6
         LA    R4,0(R4,R5)        R4->END OF TABLE USED                 00507**6
         LA    R3,12(,R5)         R3->FIRST SNTAB ENTRY                 00508**6
         LR    R1,R6              R1=R6  VARIABLE NAME LENGTH           00509**6
         BCTR  R1,R0              R1=R1-1 FOR EXECUTED COMPARE          00510**6
         EJECT ,                                                        00511**6
RLOOP    LH    R2,6(,R3)          R2=NAME LENTH                         00512**6
         CR    R6,R2              SAME LENGTH?                          00513**6
         BNE   LOOPCHK            NO -> CHECK DONE                      00514**6
         EX    R1,EXCLC           COMPARE NAMES                         00515**6
         BE    GOTIT                                                    00516**6
LOOPCHK  LA    R3,8(R2,R3)        POINT TO NEXT ENTRY                   00517**6
         CR    R3,R4              DONE?                                 00518**6
         BL    RLOOP              NO->CONTINUE                          00519**6
         SPACE 1                                                        00520**6
         ICM   R5,15,0(R5)        R5-> EXTENSION TABLE ADDRESS    NTL15
         BZ    RERR               NO-> GO SET ERROR               NTL15
         L     R4,8(,R5)          R4-> USED TABLE LENGTH          NTL15
         LA    R4,0(R4,R5)        R4-> END OF TABLE USED          NTL15
         LA    R3,12(,R5)         R3-> FIRST SNTAB ENTRY          NTL15
         B     RLOOP              CONTINUE WITH EXTENSION TBL     NTL15
         SPACE 1                                                  NTL15
RERR     LA    R1,0               SET NO FOUND AND SPLIT                00521**6
         OI    RETCODE+3,X'40'    YES->SET RC=64                        00522**6
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS                     00523**6
         BR    R14                EXIT LOCVAR WITH ERROR                00524**6
         SPACE 1                                                        00525**6
GOTIT    EQU   *                                                        00526**6
         L     R1,0(,R3)          GET VALUE ADDR                        00527**6
         LM    R3,R8,SAVEREGS     RESTORE REGISTERS                     00528**6
         BR    R14                RETURN                                00529**6
         SPACE 1                                                        00530**6
EXCLC    CLC   0(0,R7),8(R3)      EXECUTED                              00531**6
         EJECT                                                          00532**6
         AIF   (NOT &TSOER3).$NTLR33                              NTLR3
*...............................................................* NTLR3
* IKJCT441 ROUTINE                                              * NTLR3
* GET441 WILL UPDATE OR CREATE CLIST VARIABLE VALUES.  THIS IS  * NTLR3
*        NEW WITH THE INSTALLATION OF TSOE R3.                  * NTLR3
*...............................................................* NTLR3
GET441   STM   R0,R8,SAVE441                                      NTLR3
         ST    R14,SAVERET                                        NTLR3
         ST    R7,NAMEPTR                                         NTLR3
         ST    R6,NAMELEN                                         NTLR3
         ST    R15,VALUEPTR                                       NTLR3
         ST    R0,VALUELEN                                        NTLR3
         L     R15,CVTPTR                                         NTLR3
         L     R15,CVTTVT(,R15)                                   NTLR3
         L     R15,TSVTVACC-TSVT(,R15)                            NTLR3
         LTR   R15,R15                                            NTLR3
         BNZ   CALL441                                            NTLR3
LINK441  LINK  EP=IKJCT441,                                       NTLR3X
               PARAM=(ECODE,                                      NTLR3X
               NAMEPTR,                                           NTLR3X
               NAMELEN,                                           NTLR3X
               VALUEPTR,                                          NTLR3X
               VALUELEN,                                          NTLR3X
               TOKEN),                                            NTLR3X
               VL=1                                               NTLR3
         B     RET441                                             NTLR3
CALL441  CALL  (15),                                              NTLR3X
               (ECODE,                                            NTLR3X
               NAMEPTR,                                           NTLR3X
               NAMELEN,                                           NTLR3X
               VALUEPTR,                                          NTLR3X
               VALUELEN,                                          NTLR3X
               TOKEN),                                            NTLR3X
               VL                                                 NTLR3
RET441   LTR   R15,R15                                            NTLR3
         LTR   R15,R15                                            NTLR3
         BZ    END441                                             NTLR3
         ST    R15,RETCODE                                        NTLR3
END441   LM    R0,R8,SAVE441                                      NTLR3
         L     R14,SAVERET                                        NTLR3
         BR    14                                                 NTLR3
         DS    0D                                                 NTLR3
NAMELEN  DC    F'0'                                               NTLR3
VALUELEN DC    F'0'                                               NTLR3
NAMEPTR  DC    F'0'                                               NTLR3
VALUEPTR DC    F'0'                                               NTLR3
TOKEN    DC    F'0'                                               NTLR3
ECODE    DC    A(TSVEUPDT)                                        NTLR3
SAVERET  DC    F'0'
SAVE441  DC    9F'0'
         EJECT                                                    NTLR3
.$NTLR33 ANOP  ,                                                  NTLR3
*.....................................................................* 00533**6
* SUBROUTINE SETVAR:                                                  * 00534**6
*                                                                     * 00535**6
* PURPOSE:  MOVE STUFF FROM DESIRED FIELD INTO CLIST VARIABLE FIELD   * 00536**6
*                                                                     * 00537**6
* ON ENTRY (R1) = ADDR CLIST VAR POINTER                              * 00538**6
*          (R15)= ADDRESS OF INPUT FIELD (THE MOVEE...)               * 00539**6
*          (R0) = LENGTH OF INPUT FIELD (L'MOVEE......)               * 00540**6
*                                                                     * 00541**6
*   BAL  R14,SETVAR                                                   * 00542**6
*                                                                     * 00543**6
*   ON RETURN:                                                        * 00544**6
*                                                                     * 00545**6
*.....................................................................* 00546**6
         SPACE                                                          00547**6
*                                                                       00548**6
SETVAR   DS    0H                 R1->VALUE TABLE ENTRY                 00549**6
         STM   R2,R4,SAVEREGS                                           00550**6
         ST    R14,SETVR14        SAVE RETURN ADDRESS             INTEL 00551**6
         LR    R14,R0             LOAD LENGTH INTO WORK REGISTER  INTEL 00552**6
ROOMCHK  CH    R14,2(,R1)         ROOM FOR INPUT?                 INTEL 00553**6
         BNH   SM                 YES->MOVE IT.                         00554**6
         OI    RETCODE+3,X'20'    SET RC=32                             00555**6
         LH    R14,2(,R1)         NO ->GET HIS LENGTH                   00556**6
SM       BCTR  R14,0              R14=R14-1 = MACHINE LENGTH            00557**6
         SPACE 1                                                        00558**6
         TM    NOCOMPR+1,X'FF'    WAS NO COMPRESS WANTED?               00559**6
         BNZ   SKIPCPRS           ..DONT DO COMPRESS                    00560**6
DEBLANK  LA    R2,0(R15,R14)      POINT TO LAST CHARACTER TO MOVE       00561**6
         CLI   0(R2),C' '         IS THIS ONE A BLANK                   00562**6
         BNE   SKIPCPRS           NO..FINISHED WITH THIS ONE            00563**6
         BCT   R14,DEBLANK        LOOP UNTIL DONE                       00564**6
SKIPCPRS DS    0H                                                       00565**6
         SPACE 1                                                        00566**6
         CLI   0(R15),C' '        IS FIRST CHAR A BLANK?                00567**6
         BE    SETNULL            YEP...SKIP MOVE AND SET LENG=0        00568**6
         EX    R14,SMOVE          MOVE IT                               00569**6
         LA    R14,1(,R14)        BUMP REAL COUNT                       00570**6
UPDTCNT  STH   R14,0(,R1)         AND SAVE COUNT AWAY                   00571**6
         LM    R2,R4,SAVEREGS                                           00572**6
         LR    R0,R14             PASS BACK LENGTH USED           INTEL 00573**6
         L     R14,SETVR14        RESTORE RETURN ADDRESS          INTEL 00574**6
         BR    R14                                                      00575**6
         SPACE 1                                                        00576**6
SETNULL  SR    R14,R14                                                  00577**6
         B     UPDTCNT                                                  00578**6
         SPACE 1                                                        00579**6
SMOVE    MVC   4(0,R1),0(R15)     EXECUTED                              00580**6
         EJECT                                                          00581**6
*.....................................................................* 00582**6
* SUBROUTINE: GETLINE#                                                * 00583**6
*                                                                     * 00584**6
* PURPOSE: GET TCAM UCB ADDRESS OR VTAM TERMINAL ID FOR THIS ADDRESS  * 00585**6
*          SPACE                                                      * 00586**6
*                                                                     * 00587**6
* ENTER WITH (ASCBADDR) CONTAINING THE ASCB ADDRESS                   * 00588**6
*                                                                     * 00589**6
*      BAL   R14,GETLINE#                                             * 00590**6
*                                                                     * 00591**6
* RETURNS WITH 'LINEAREA' FILLED IN                                   * 00592**6
*                                                                     * 00593**6
*.....................................................................* 00594**6
         SPACE                                                          00595**6
GETLINE# STM   R3,R8,SAVEREGS                                           00596**6
         ST    R14,GETLR14          SAVE RETURN ADDRESS           INTEL 00597**6
         MVC   VLOGMODE,BLANKS                                      NTL 00598**6
         XC    TTYPE,TTYPE                                          NTL 00599**6
         L     R7,ADDRASCB        RETRIEVE ASCB ADDRESS                 00600**6
         USING ASCB,R7                                                  00601**6
         AIF   (NOT &TONE4).$SKP10                                TONE4 00602**6
*                                                                 TONE4 00603**6
*     THE FOLLOWING WILL CHECK ASCBTSB IF MARKED BY TONE 4.       TONE4 00604**6
*     IF ITS A TONE ADDRESS SPACE THEN IT WILL GET THE USER PROC  TONE4 00605**6
*     FROM THE TIOT AND DROP ADDRESS TO ASCB CSCB, LOCATE THE     TONE4 00606**6
*     THE TONE CREATED ASCB CSCB FOR THIS USER AND ENSURE         TONE4 00607**6
*     ADDRESSABILITY. W WILLIAMS - APRIL 82 - INTEL CORP          TONE4 00608**6
*                                                                 TONE4 00609**6
         CLI   ASCBTSB,X'C0'      IS IT A TONE ADDRESS SPACE      TONE4 00610**6
         BNE   NOTONE             NO                              TONE4 00611**6
         $FINDCB TCB=R5           GET CURRENT TCB                 TONE4 00612**6
         CLI   TCBUSER(R5),C'T'   MARKED BY ATTACH                TONE4 00613**6
         BNE   NOTONE             NO....                          TONE4 00614**6
         L     R5,TCBJSTCB(,R5)   GET JOBSTEP TCB                 TONE4 00615**6
         CLI   TCBUSER(R5),C'T'   MARKED BY ATTACH                TONE4 00616**6
         BNE   NOTONE             NO....                          TONE4 00617**6
         ICM   R5,7,TCBUSER+1(R5) GET TCBUSER                     TONE4 00618**6
         BNZ   ITSTONE            WE GOT SOMETHING....            TONE4 00619**6
         B     NOTONE             NO ONE HOME...                  TONE4 00620**6
         SPACE 2                                                  TONE4 00621**6
         USING ISCCHAIN,R5        ADDRESS CHAINING BLOCK          TONE4 00622**6
ITSTONE  CLC   ISCTSKID,=CL8'TONE'      IS THIS TPCDATA           TONE4 00623**6
         BNE   NOTONE                   NO....                    TONE4 00624**6
         CLC   ISCBLKID,=CL8'TPCDATA'   IS THIS BLOCK TPCDATA     TONE4 00625**6
         BNE   NOTONE                   NO....                    TONE4 00626**6
         ICM   R5,7,ISCBLOCK      GET TPCDATA ADDRESS             TONE4 00627**6
         BZ    NOTONE             NO ONE HOME....                 TONE4 00628**6
         SPACE 1                                                    NTL 00629**6
         USING TPCDATA,R5         ADDRESS TPCDATA                 TONE4 00630**6
         L     R8,TPCASCB         GET TONES ASCB FOR OUR TONE SESSTONE4 00631**6
         MVC   LINEAREA(8),TPCLTERM  OK... GET LINE FROM TONE     TONE4 00632**6
         B     LINEFIN                                            TONE4 00633**6
         SPACE 1                                                  TONE4 00634**6
TCBUSER  EQU   X'0A8',4          TCBUSER FIELD FROM TCB           TONE4 00635**6
TCBJSTCB EQU   X'07C',4          TCBJSTCB FIELD FROM TCB          TONE4 00636**6
         SPACE 1                                                  TONE4 00637**6
NOTONE   DS    0H                                                 TONE4 00638**6
.$SKP10  ANOP  ,                                                  TONE4 00639**6
         L     R7,ASCBTSB         GET ADDRESS OF TSB FOR LINE ADDR      00640**6
         USING TSB,R7             USE THE ADDRESS                       00641**6
*                                                                   NTL 00642**6
* JUST FOR CHUCKLES....SEE IT THIS IS BATCH                         NTL 00643**6
*                                                                   NTL 00644**6
         LTR   R7,R7              ANY TSB ADDRESS THERE?            NTL 00645**6
         BNZ   DOSTAX             YES..CONTINUE                     NTL 00646**6
         MVC   LINEAREA(8),BLANKS NO LINE HERE                      NTL 00647**6
         B     LINEFIN                                              NTL 00648**6
         SPACE 1                                                    NTL 00649**6
DOSTAX   STAX  MF=(E,DEFER)       HOLD ALL CALLS PLEASE....             00650**6
         MODESET MF=(E,SUPER)                                           00651**6
         ST    1,OLDKEY                                                 00652**6
*
         TM    TSBFLG5,TSBVTAM    SEE IF THIS IS A TSO/VTAM TSB         00653**6
         BO    ITSVTAM            YES....GO GET TSB EXTENSION           00654**6
ITSTCAM  UNPK  TCAMUCB(5),TSBLINE(3) UNPACK THE TSO LINE ADDRESS        00655**6
         NC    TCAMUCB,HEXMASK                                          00656**6
         TR    TCAMUCB,HEXTAB                                           00657**6
         MVC   LINEAREA(3),=C'UCB'                                      00658**6
         MVI   TCAMUCB,C'='       FIX IT UP PRETTY                      00659**6
         MVI   TCAMUCB+4,C' '                                           00660**6
         B     FINSUPR                                                  00661**6
         SPACE 1                                                        00662**6
ITSVTAM  L     R8,TSBEXTNT         GET ADDRESS OF TSB EXTENSION         00663**6
         USING TSBX,R8             ESTABLISH ADDRESSABILITY TO TSBX     00664**6
         TM    TSBXFLG1,TSBXWREC   SEE IF TERMINAL AWAITING RECON       00665**6
         BNO   GETSYM              NO.....GO GET SYMBOLIC NAME          00666**6
         MVC   LINEAREA(8),DISCON  MOVE IN DISCON'D                     00667**6
         B     FINSUPR             GO MODESET AND RESTORE OLD KEY       00668**6
GETSYM   MVC   LINEAREA(8),TSBTRMID MOVE IN TERMINAL SYMBOLIC NAME      00669**6
         MVC   VLOGMODE,TSBXLMOD   SAVE LOGMODE NAME                NTL 00670**6
         MVC   TTYPE,TSBXTMTP      SAVE TERMINAL TYPE               NTL 00671**6
*                                                                       00672**6
         DROP  R8                                                       00673**6
FINSUPR  DS    0H                                                       00674**6
         L     R1,OLDKEY                                                00675**6
         MODESET MF=(E,PROBLEM)                                         00676**6
         STAX  MF=(E,RESUME)      OK TO HAVE ATTENTIONS NOW...          00677**6
*                                                                       00678**6
         DROP  R7                                                       00679**6
LINEFIN  LM    R3,R8,SAVEREGS                                           00680**6
         L     R14,GETLR14          RESTORE RETURN ADDRESS        INTEL 00681**6
         BR    R14                                                      00682**6
         EJECT ,                                                        00683**6
*********************************************************************** 00684**6
*                                                                       00685**6
* FORMAT DATE TIME  HEADING FROM SMF30TME/SMF30DTE                      00686**6
*   R0=TIME IN 100THS OF SECOND SINCE MIDNIGHT                          00687**6
*   R1=DATE IN 00YYDDDS FORMAT                                          00688**6
*                                                                       00689**6
* RETURNS WITH CDAYN(LEN) = DDMONYY (DDD) DAY HH:MM:SS.TH               00690**6
*                E.G.       07JUL80 (189) MON 13:45:24.56               00691**6
*                           123456789.123456789.123456789               00692**6
*                                                                       00693**6
*********************************************************************** 00694**6
DATERTN  CLI   JDATE,C'0'   HAVE WE BEEN HERE BEFORE                    00695**6
         BHR   R14           ALREADY DONE THIS STUFF...KISS OFF         00696**6
         STM   R14,R3,SAVEREGS                                          00697**6
         MVC   MONMSK(MVCLEN),XMONMSK  INIT DATE/TIME WORK AREA         00698**6
         TIME  BIN ,                                                    00699**6
         ST    R1,DATE                 SAVE DATE FOR LATER              00700**6
         CVD   R0,WRKD                GET TIME IN DEC 100TH/SEC         00701**6
         DP    WRKD(8),DEC6000(3) /6000 : REM IS SS.TH                  00702**6
         DP    WRKD(5),DEC60(2)       /60   : REM IS MM                 00703**6
         MVC   EDITWORK(L'HHMASK),HHMASK   SETUP MULT EDIT MASK         00704**6
         ED    EDITWORK(L'HHMASK),WRKD EDIT HH,MM,SS                    00705**6
FINTIME  MVC   CHH(2),EDITWORK+4      MOVE IN HOURS                     00706**6
         MVC   CMM(2),EDITWORK+8      MOVE IN MM                        00707**6
         MVC   CSS(5),EDITWORK+12     MOVE IN SS.TH                     00708**6
*                                                                       00709**6
***FORMAT THE DATE INTO THE OUTPUT MSG                                  00710**6
*                                                                       00711**6
         MVC   WORKWORD(4),DATE        MOVE DATE TO WORK AREA.          00712**6
         MVO   WORKWORD+1(3),WORKWORD(2)   MAKE 00YYDDDS INTO 00000YYS. 00713**6
         UNPK  CYR(2),WORKWORD+2(2)    FORMAT YEAR.                     00714**6
         XC    WRKD,WRKD                                                00715**6
         MVC   WRKD+4(4),WORKWORD      CNVT YEAR TO BIN                 00716**6
         CVB   R0,WRKD                                                  00717**6
         ST    R0,BINYEAR              AND SAVE                         00718**6
         TM    BINYEAR+3,X'03'         LEAP YEAR?                       00719**6
         BNZ   MON1                    NO.                              00720**6
         MVI   MONMSK+10,29            YES, CORRECT                     00721**6
MON1     XC    WRKD,WRKD               CNVT DAYS TO BIN                 00722**6
         MVC   WRKD+6(2),DATE+2                                         00723**6
         CVB   R3,WRKD                                                  00724**6
         ST    R3,BINDAYS              SAVE FOR LATER                   00725**6
         XR    R1,R1                                                    00726**6
         LA    R15,11                                                   00727**6
MON2     IC    R1,MONMSK(R15)          COMPUTE MON & DAY                00728**6
         SR    R3,R1                                                    00729**6
         BNP   MONOVR                                                   00730**6
         BCT   R15,MON2                                                 00731**6
         B     *+6                                                      00732**6
         EJECT ,                                                        00733**6
MONOVR   AR    R3,R1                   CORRECT OVERDRAW                 00734**6
         CVD   R3,WRKD                 FORMAT DAY                       00735**6
         UNPK  CDAYN(2),WRKD+6(2)                                       00736**6
         OI    CDAYN+1,X'F0'           FIX UP SIGN                      00737**6
         MH    R15,=H'3'               GET TABLE OFFSET                 00738**6
         LA    R15,MONTAB(R15)         AND POINT AT MONTH               00739**6
         MVC   CMON(3),0(R15)          MOVE IT TO THE MSG               00740**6
***DAY OF WEEK                                                          00741**6
         L     R15,BINYEAR                                              00742**6
         SH    R15,=H'69'                                               00743**6
         BNP   OUTT                    MUST BE GREATER OR BAD           00744**6
         XR    R14,R14                 CLEAR DAY REG                    00745**6
         D     R14,=F'4'                                                00746**6
         MH    R15,=H'5'                                                00747**6
         AR    R14,R15                                                  00748**6
         A     R14,BINDAYS                                              00749**6
         SRDA  R14,32                                                   00750**6
         D     R14,=F'7'               MODULO 7 FOR WEEK                00751**6
         MH    R14,=H'09'                                               00752**6
         LR    R0,R14                  SAVE THIS FOR LATER              00753**6
         LA    R14,DAYTAB(R14)         POINT AT TODAY                   00754**6
         MVC   CDAY(09),0(R14)         INSERT IN MSG                    00755**6
         LR    R14,R0                                                   00756**6
         LA    R14,DAYTAB1(R14)        POINT AT TODAY-LEFT JUSTIFIED    00757**6
         MVC   LEFTDAY,0(R14)          INSERT IN MSG                    00758**6
***                                                                     00759**6
MOVEJD   MVC   JDATE-1(7),=X'4020204B202020'                            00760**6
         ED    JDATE-1(7),DATE+1                                        00761**6
         MVI   JDATE-1,C'('          RESTORE NICE FORMAT....            00762**6
         MVC   CJDAY(3),JDATE+3         MOVE DAY TO MESSAGE             00763**6
*                                                                       00764**6
*                                                                       00765**6
DATEFIND LM    R14,R3,SAVEREGS                                          00766**6
         BR    R14                     RETURN TO MAINLINE               00767**6
*                                                                       00768**6
OUTT     MVC   CDAY(9),=CL9'(UNKNOWN)'                                  00769**6
         B     MOVEJD                                                   00770**6
         EJECT ,                                                        00771**6
*...................................................................NTL 00772**6
*                                                                   NTL 00773**6
* FITINUM SUBROUTINE - CONVERT BIN NUMBER TO NICE FORMAT            NTL 00774**6
*                                                                   NTL 00775**6
* ENTER WITH <R1>  = NUMBER IN BINARY                               NTL 00776**6
*            BAL   R14,FITINUM                                      NTL 00777**6
*                                                                   NTL 00778**6
*                                                                   NTL 00779**6
*       USES R1,R14,R15                                             NTL 00780**6
*.................................................................. NTL 00781**6
FITINUM  CVD   R1,WRKD        CONVERT TO PACKED DECIMAL             NTL 00782**6
FITINUM1 MVC   EDITWORK(L'NORMAL),NORMAL INITIALIZE THE EDIT FORMAT NTL 00783**6
         MVC   NUMBER,BLANKS  CLEAR OUT NUMBER                      NTL 00784**6
         LA    R1,EDITWORK+SIGNORM IN CASE OF ZEROES                NTL 00785**6
         EDMK  EDITWORK(L'NORMAL),WRKD+2 CONVERT TO EBCDIC          NTL 00786**6
         ST    R14,FITNR14     SAVE RETURN ADDRESS                INTEL 00787**6
         LA    R14,EDITWORK+L'NORMAL-1 A(END OF CONVERTED NUMBER)   NTL 00788**6
         SLR   R14,R1         LENGTH OF THE CONVERTED NUMBER - 1    NTL 00789**6
         EX    R14,MVNUMBER   PUT THE NUMBER IN THE MSG             NTL 00790**6
         LA    R15,1(R14,R15) A(NEXT SPOT IN MSG)                   NTL 00791**6
         L     R14,FITNR14    RESTORE RETURN ADDRESS              INTEL 00792**6
         BR    R14            RETURN TO OUR CALLER                  NTL 00793**6
         SPACE 3                                                    NTL 00794**6
MVNUMBER MVC   NUMBER(0),0(R1) MOVE NUMBER TO 'NUMBER' AREA         NTL 00795**6
         SPACE 2                                                    NTL 00796**6
NORMAL   DC    X'402020202020202020202020' EDIT MASK                NTL 00797**6
SIGNORM  EQU   11             OFFSET TO LAST DIGIT                  NTL 00798**6
         EJECT ,                                                        00799**6
*********************************************************************** 00800**6
*                                                                       00801**6
*       CONSTANTS FOR DATE ROUTINE USAGE                                00802**6
*                                                                       00803**6
*********************************************************************** 00804**6
         SPACE ,                                                        00805**6
HHMASK   DC    X'40202021202022212020222120204B2020'                    00806**6
DEC60    DC    X'060C'                                                  00807**6
DEC6000  DC    X'06000C'                                                00808**6
DEC50    DC    X'050C'                                                  00809**6
*********************************************************************** 00810**6
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES            00811**6
*                                                                       00812**6
XMONMSK  DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )        00813**6
         DC    CL1' '                                          )        00814**6
*                                                              )        00815**6
*                 YY.DDD XXXXXXXXX, MON. DD, 19NN    L  T      )        00816**6
*                0123456789.123456789.123456789.12   E  O      )        00817**6
         DC    C' YY.DDD XXXXXXXXX, MON. DD, 19NN)'  A  G      )        00818**6
         DC    CL3' ',C'  '                          E  E      )        00819**6
         DC    CL2' ',C':'                           V  T      )        00820**6
         DC    CL2' ',C':'                           E  H      )        00821**6
         DC    CL5'SS.TH',C'  '                         E      )        00822**6
*                                                       R      )        00823**6
MVCLEN   EQU   *-XMONMSK                                                00824**6
*                                                                       00825**6
*********************************************************************** 00826**6
DAYTAB   DC    CL09'  TUESDAY'                                          00827**6
         DC    CL09'WEDNESDAY'                                          00828**6
         DC    CL09' THURSDAY'                                          00829**6
         DC    CL09'   FRIDAY'                                          00830**6
         DC    CL09' SATURDAY'                                          00831**6
         DC    CL09'   SUNDAY'                                          00832**6
         DC    CL09'   MONDAY'                                          00833**6
DAYTAB1  DC    CL09'TUESDAY'                                            00834**6
         DC    CL09'WEDNESDAY'                                          00835**6
         DC    CL09'THURSDAY'                                           00836**6
         DC    CL09'FRIDAY'                                             00837**6
         DC    CL09'SATURDAY'                                           00838**6
         DC    CL09'SUNDAY'                                             00839**6
         DC    CL09'MONDAY'                                             00840**6
MONTAB   DC    C'DECNOVOCTSEPAUGJULJUNMAYAPRMARFEBJAN'                  00841**6
         SPACE                                                          00842**6
* OTHER  CONSTANTS                                                    * 00843**6
         SPACE                                                          00844**6
HEXMASK  DC    4X'0F'                                                   00845**6
HEXTAB   DC    C'0123456789ABCDEF'                                      00846**6
STARTING DC    CL8'STARTING'                                            00847**6
DISCON   DC    CL8'DISCON''D'                                           00848**6
BLANKS   DC    CL24' '       A BLANK LINE......                     NTL 00849**6
         PRINT OFF                                                      00850**6
         DS    0F                                                       00851**6
CODE     DC    X'ABCFEDAD'                                              00852**6
         PRINT ON                                                       00853**6
         EJECT                                                          00854**6
*.....................................................................* 00855**6
*        LIST FORMS OF MACROS                                         * 00856**6
*.....................................................................* 00857**6
         SPACE 2                                                        00858**6
         DS    0F                                                       00859**6
DEFER    STAX  DEFER=YES,MF=L            HOLD DEM ATTENTIONS...         00860**6
         SPACE 2                                                        00861**6
RESUME   STAX  DEFER=NO,MF=L             RESUME ATTENTION HANDLING..    00862**6
         SPACE 2                                                        00863**6
GTTERME  GTTERM ATTRIB=*-*,PRMSZE=*-*,ALTSZE=*-*,MF=L               NTL 00864**6
         SPACE 2                                                    NTL 00865**6
SUPER    MODESET KEY=ZERO,MF=L                                      NTL 00866**6
         SPACE 2                                                    NTL 00867**6
PROBLEM  MODESET KEY=NZERO,MF=L                                     NTL 00868**6
         EJECT                                                          00869**6
*.....................................................................* 00870**6
*        LITERAL POOL                                                 * 00871**6
*.....................................................................* 00872**6
         SPACE                                                          00873**6
         LTORG                                                          00874**6
         EJECT                                                          00875**6
*.....................................................................* 00876**6
*        DYNAMIC STORAGE AREA -- GETMAINED                            * 00877**6
*.....................................................................* 00878**6
         SPACE                                                          00879**6
WORKAREA DSECT                                                          00880**6
SAVEAREA DS    18F                                                      00881**6
SAVEREGS DS    16F                                                      00882**6
RETCODE  DS    F                                                        00883**6
SETVR14  DS    F        RETURN REGISTER FOR SETVAR                INTEL 00884**6
GETLR14  DS    F        RETURN REGISTER FOR GETLINE#              INTEL 00885**6
FITNR14  DS    F        RETURN REGISTER FOR FITINUM               INTEL 00886**6
*                                                                       00887**6
ANS      DC    F'0'                                                     00888**6
ECB      DC    F'0'                                                     00889**6
PPLA     DS    7F                                                       00890**6
ECTADDR  EQU   PPLA+4,4                                                 00891**6
*                                                                       00892**6
VLOGMODE DS    CL8                                                  NTL 00893**6
TTYPE    DS    XL2                                                  NTL 00894**6
LINEAREA DS    CL8,CL2 PLUS PADDING....                                 00895**6
TCAMUCB  EQU   LINEAREA+3,8                                             00896**6
ADDRASCB DS    F                                                        00897**6
*                                                                       00898**6
OLDKEY   DC    F'0'                                                     00899**6
LEFTDAY  DC    CL9' '                                                   00900**6
PRMSZE   DS    0H                                                   NTL 00901**6
PRMROWS  DS    AL1                                                  NTL 00902**6
PRMCOLS  DS    AL1                                                  NTL 00903**6
ALTSZE   DS    0H                                                   NTL 00904**6
ALTROWS  DS    AL1                                                  NTL 00905**6
ALTCOLS  DS    AL1                                                  NTL 00906**6
GTTERMRC DS    X                                                    NTL 00907**6
         DS    X                                                    NTL 00908**6
CURROWS  DS    AL1                                                  NTL 00909**6
CURCOLS  DS    AL1                                                  NTL 00910**6
ATTRIB   DS    F                                                    NTL 00911**6
CLRITL   EQU   *-PRMSZE   FOR XC CLEAR                              NTL 00912**6
ATTRYORN DS    CL4                                                  NTL 00913**6
WHERAMI  DS    CL8                                                  NTL 00914**6
GTTERM   GTTERM ATTRIB=*-*,PRMSZE=*-*,ALTSZE=*-*,MF=L               NTL 00915**6
GTTERML  EQU   *-GTTERM                                             NTL 00916**6
WRKD     DC    D'0'                                                     00917**6
NUMBER   DS    CL8            FINAL PRODUCT OF CONVERT              NTL 00918**6
         DS    CL8            FOR EXTRA STUFF                       NTL 00919**6
BINYEAR  DC    F'0'                                                     00920**6
BINDAYS  DC    F'0'                                                     00921**6
DATE     DC    F'0'                                                     00922**6
WORKWORD DC    2F'0'                                                    00923**6
EDITWORK DC    12H'0'                                                   00924**6
*********************************************************************** 00925**6
* LEAVE FIELDS TOGETHER.. INITIALIZED BY ONE MVC WITH VALUES            00926**6
*                                                                       00927**6
MONMSK   DC    AL1(31,30,31,30,31,31,30,31,30,31,28,31)        )        00928**6
         DC    CL1' '                                          )        00929**6
*                                                              )        00930**6
*                 YY.DDD XXXXXXXXX, MON. DD, 19NN    L         )        00931**6
*                0123456789.123456789.123456789.12   E         )        00932**6
CDATMSG  DC    C' YY.DDD XXXXXXXXX, MON. DD, 19NN)'  A         )        00933**6
JDATE    EQU   CDATMSG+01,6                          V         )        00934**6
CDAY     EQU   CDATMSG+08,9                          E         )        00935**6
CMON     EQU   CDATMSG+19,3                                    )        00936**6
CDAYN    EQU   CDATMSG+24,2                          T         )        00937**6
CYR      EQU   CDATMSG+30,2                          O         )        00938**6
CDATE    EQU   CDATMSG+19,13                                            00939**6
*                                                    G         )        00940**6
CJDAY    DC    CL3' ',C') '                          E         )        00941**6
CHH      DC    CL2' ',C':'                           T         )        00942**6
CMM      DC    CL2' ',C':'                           H         )        00943**6
CSS      DC    CL5'SS.TH',C' )'                      E         )        00944**6
*                                                    R         )        00945**6
*********************************************************************** 00946**6
LEN      EQU   *-CDATMSG                                                00947**6
WORKLEN  EQU   *-WORKAREA                                               00948**6
         SPACE                                                          00949**6
GETINFO  CSECT                                                          00950**6
         EJECT                                                          00951**6
*.....................................................................* 00952**6
*        PARSE PARAMETER LIST - KEYWORDS                              * 00953**6
*.....................................................................* 00954**6
         SPACE                                                          00955**6
*                                                                       00956**6
         PRINT     NOGEN                                                00957**6
PCL      IKJPARM                                                        00958**6
PGMRNAME IKJKEYWD                                                       00959**6
         IKJNAME   'PGMRNAME',SUBFLD=PGMFLD                             00960**6
BINNUMB  IKJKEYWD                                                       00961**6
         IKJNAME   'BIN',SUBFLD=BINFLD                                  00962**6
PHONE    IKJKEYWD                                                       00963**6
         IKJNAME   'PHONE',SUBFLD=PHONFLD                               00964**6
DEST     IKJKEYWD                                                       00965**6
         IKJNAME   'DEST',SUBFLD=DESTFLD                                00966**6
JOBCLASS IKJKEYWD                                                       00967**6
         IKJNAME   'JOBCLASS',SUBFLD=JOBCFLD                            00968**6
MSGCLASS IKJKEYWD                                                       00969**6
         IKJNAME   'MSGCLASS',SUBFLD=MSGCFLD                            00970**6
SYSOUT   IKJKEYWD                                                       00971**6
         IKJNAME   'SYSOUT',SUBFLD=SYSOFLD                              00972**6
PROJECT  IKJKEYWD                                                       00973**6
         IKJNAME   'PROJECT',SUBFLD=PROJFLD                             00974**6
SRNUM    IKJKEYWD                                                       00975**6
         IKJNAME   'SRNUM',SUBFLD=SRNUFLD                               00976**6
JOBNUMB  IKJKEYWD                                                       00977**6
         IKJNAME   'JOBNUMB',SUBFLD=JOBNFLD                             00978**6
LINE     IKJKEYWD                                                       00979**6
         IKJNAME   'LINE',SUBFLD=LINEFLD                                00980**6
DAY      IKJKEYWD                                                       00981**6
         IKJNAME   'DAY',SUBFLD=DAYXFLD                                 00982**6
JDATEV   IKJKEYWD                                                       00983**6
         IKJNAME   'JDATE',SUBFLD=JDATFLD                               00984**6
GDATEV   IKJKEYWD                                                       00985**6
         IKJNAME   'DATE',SUBFLD=DATEFLD                                00986**6
NOCOMPR  IKJKEYWD  ,                                                    00987**6
         IKJNAME   'NOCOMPR'                                            00988**6
         EJECT                                                          00989**6
ROWS     IKJKEYWD                                                       00990**6
         IKJNAME   'ROWS',SUBFLD=ROWSFLD                                00991**6
COLS     IKJKEYWD                                                       00992**6
         IKJNAME   'COLS',SUBFLD=COLSFLD                                00993**6
PROWS    IKJKEYWD                                                       00994**6
         IKJNAME   'PROWS',SUBFLD=PROWSFLD                              00995**6
PCOLS    IKJKEYWD                                                       00996**6
         IKJNAME   'PCOLS',SUBFLD=PCOLSFLD                              00997**6
AROWS    IKJKEYWD                                                       00998**6
         IKJNAME   'AROWS',SUBFLD=AROWSFLD                              00999**6
ACOLS    IKJKEYWD                                                       01000**6
         IKJNAME   'ACOLS',SUBFLD=ACOLSFLD                              01001**6
ATTR     IKJKEYWD                                                       01002**6
         IKJNAME   'ATTR',SUBFLD=ATTRFLD                                01003**6
LOGMODE  IKJKEYWD                                                       01004**6
         IKJNAME   'LOGMODE',SUBFLD=LMODFLD                             01005**6
TERMTYPE IKJKEYWD                                                       01006**6
         IKJNAME   'TERMTYPE',SUBFLD=TTYPFLD                            01007**6
ENVIRON  IKJKEYWD                                                       01008**6
         IKJNAME   'ENVIRON',SUBFLD=ENVFLD                              01009**6
         EJECT                                                          01010**6
*.....................................................................* 01011**6
*        PARSE PARAMETER LIST - SUBFIELDS                             * 01012**6
*.....................................................................* 01013**6
         SPACE                                                          01014**6
PGMFLD   IKJSUBF                                                        01015**6
PGMRDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01016**6
BINFLD   IKJSUBF                                                        01017**6
BINDD    IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01018**6
PHONFLD  IKJSUBF                                                        01019**6
PHONDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01020**6
DESTFLD  IKJSUBF                                                        01021**6
DESTDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01022**6
JOBCFLD  IKJSUBF                                                        01023**6
JOBCDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01024**6
MSGCFLD  IKJSUBF                                                        01025**6
MSGCDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01026**6
SYSOFLD  IKJSUBF                                                        01027**6
SYSODD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01028**6
PROJFLD  IKJSUBF                                                        01029**6
PROJDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01030**6
SRNUFLD  IKJSUBF                                                        01031**6
SRNUDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01032**6
JOBNFLD  IKJSUBF                                                        01033**6
JOBNDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01034**6
LINEFLD  IKJSUBF                                                        01035**6
LINEDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01036**6
DAYXFLD  IKJSUBF                                                        01037**6
DAYXDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01038**6
JDATFLD  IKJSUBF                                                        01039**6
JDATDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01040**6
DATEFLD  IKJSUBF                                                        01041**6
DATEDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01042**6
          EJECT   ,                                                 NTL 01043**6
ROWSFLD  IKJSUBF                                                        01044**6
ROWSDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01045**6
COLSFLD  IKJSUBF                                                        01046**6
COLSDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01047**6
PROWSFLD IKJSUBF                                                        01048**6
PROWSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01049**6
PCOLSFLD IKJSUBF                                                        01050**6
PCOLSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01051**6
AROWSFLD IKJSUBF                                                        01052**6
AROWSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01053**6
ACOLSFLD IKJSUBF                                                        01054**6
ACOLSDD  IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01055**6
ATTRFLD  IKJSUBF                                                        01056**6
ATTRDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01057**6
LMODFLD  IKJSUBF                                                        01058**6
LMODDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01059**6
TTYPFLD  IKJSUBF                                                        01060**6
TTYPDD   IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01061**6
ENVFLD   IKJSUBF                                                        01062**6
ENVDD    IKJIDENT 'CLIST VARIABLE',PROMPT='CLIST VARIABLE',CHAR         01063**6
         IKJENDP                                                        01064**6
         PRINT     GEN                                                  01065**6
         EJECT                                                          01066**6
         AIF   (&ACF314).$$SKP9B                                  NTL14
*.....................................................................* 01067**6
*        JCT MAPPING MACRO                                            * 01068**6
*.....................................................................* 01069**6
         SPACE                                                          01070**6
         SPACE 2                                                  INTEL 01071**6
         AIF   (NOT &SP3).$$SKP9                                  NTL14
TSO051   CSECT   ,                                                INTEL 01073**6
         $BUFFER   ,                                              INTEL 01074**6
         #ACFJCTX  ,       ACF2 3.1.3                             INTEL 01075**6
TSO051   CSECT   ,                                                INTEL 01076**6
         AGO   .$$SKP9A                                           INTEL 01077**6
.$$SKP9  ANOP  ,                                                  INTEL 01078**6
.$$SKP9A ANOP  ,                                                  INTEL 01079**6
         $JCT  DOC=YES                                                  01080**6
         SPACE 2                                                        01081**6
         EJECT                                                          01088**6
.$$SKP9B ANOP  ,                                                  NTL14
*.....................................................................* 01089**6
*       MAPPING MACROS                                                * 01090**6
*.....................................................................* 01091**6
         SPACE                                                          01092**6
         PRINT NOGEN                                              INTEL 01093**6
         IHAASCB                                                        01094**6
         IKJTSB   LIST=YES,EXT=YES                                      01095**6
         AIF   (NOT &TONE4).$SKP99                                TONE4 01096**6
         TPCDATA  ,                                               TONE4 01097**6
.$SKP99  ANOP  ,                                                  TONE4 01098**6
         AIF   (NOT &ACF314).$SK1004                              INTEL 01072**6
         PRINT NOGEN                                              INTEL 01093**6
         IHAPSA                                                   INTEL
         ACFASVT                                                  INTEL
         ACCVT                                                    INTEL
         ACUCB                                                    INTEL
         PRINT     GEN                                            INTEL 01065**6
         LIDREC                                                   INTEL
.$SK1004 ANOP  ,                                                  TONE4 01098**6
*.....................................................................* 01082**6
*        OVERLAY DEFINITIONS FOR JOB ACCOUNT NUMBER                   * 01083**6
*.....................................................................* 01084**6
         SPACE                                                          01085**6
NTLPROJ  EQU   LIDACCT,4                                                01086**6
NTLSRNUM EQU   LIDACCT+4,4                                              01087**6
NTLROOMN EQU   LIDACCT+9,4                                        NTL14
         AIF   (NOT &TSOER3).$NTLR34                              NTLR3
CVTPRT   EQU   16                                                 NTLR3
CVTTVT   EQU   X'9C'                                              NTLR3
         IKJTSVT                                                  NTLR3
.$NTLR34 ANOP  ,                                                  NTLR3
         END ,                                                          01099**6
